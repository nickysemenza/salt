{% import "lib.sls" as lib -%}

{# TODO: make this work inside load_yaml #}
{# {% set pecan_wg = pillar.roles['pecan'].wg_ip %} #}

{% load_yaml as services %}
---
grafana: {}
prometheus: {}
prometheus-pecan:
  upstream_override: "http://172.16.0.1"
  portname_override: prometheus
hass: 
  upstream_override: "http://172.16.0.1"
unifi: {}
movies: 
  upstream_override: "http://172.16.0.1"
  portname_override: radarr
tv: 
  upstream_override: "http://172.16.0.1"
  portname_override: sonarr
media: 
  upstream_override: "http://172.16.0.1"
  portname_override: ombi
jackett: 
  upstream_override: "http://172.16.0.1"
{% endload %}
http:
  routers:
{%- for service, attrs in services.items() %}
    {{service}}:
      rule: "Host(`{{service}}.infra.nickysemenza.com`)"
      service: {{service}}
      middlewares:
        - "cloudflare-ips"
        - "cloudflare-access"
{%-endfor%} 

    traefik-dashboard:
      rule: "Host(`traefik.infra.nickysemenza.com`)"
      service: api@internal
      middlewares:
        - "cloudflare-ips"
        - "cloudflare-access"

  middlewares:
    cloudflare-access:
      forwardAuth:
        address: "http://localhost:{{lib.get_port('cloudflare_access_forward_auth')}}/auth/7c6d913377f00e8781dfa2c785ae01b2f37f17c067b0fb830ad71e305a5a21d5"
    cloudflare-ips:
      ipWhiteList:
        sourceRange:
        {# https://www.cloudflare.com/ips-v6 #}
          - "2400:cb00::/32"
          - "2606:4700::/32"
          - "2803:f800::/32"
          - "2405:b500::/32"
          - "2405:8100::/32"
          - "2a06:98c0::/29"
          - "2c0f:f248::/32"
        {# https://www.cloudflare.com/ips-v4 #}
          - "173.245.48.0/20"
          - "103.21.244.0/22"
          - "103.22.200.0/22"
          - "103.31.4.0/22"
          - "141.101.64.0/18"
          - "108.162.192.0/18"
          - "190.93.240.0/20"
          - "188.114.96.0/20"
          - "197.234.240.0/22"
          - "198.41.128.0/17"
          - "162.158.0.0/15"
          - "104.16.0.0/12"
          - "172.64.0.0/13"
          - "131.0.72.0/22"
  services:
{%- for service, attrs in services.items() %}
{% set port_name = attrs['portname_override'] if 'portname_override' in attrs else service %}
{% set upstream = attrs['upstream_override'] if 'upstream_override' in attrs else "http://localhost" %}
    {{service}}:
      loadBalancer:
        servers:
        - url: {{upstream}}:{{lib.get_port(port_name)}}
{%-endfor%}