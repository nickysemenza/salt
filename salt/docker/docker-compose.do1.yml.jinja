{% set database = pillar.get('databases')['postgres-main'] %}
{% import "lib.sls" as lib -%}

version: "3"
services:
  traefik-auth-cloudflare:
    image: akohlbecker/traefik-auth-cloudflare
    restart: always
    container_name: traefik-auth-cloudflare
    # traefik-auth-cloudflare needs to be configured with your auth-domain
    command: ["--auth-domain", "https://nickysemenza.cloudflareaccess.com"]
    ports:
      - "{{lib.get_port('cloudflare_access_forward_auth')}}:80"
    logging:
      driver: gcplogs
      options:
        gcp-project: nickysemenza1
  traefik:
    image: traefik:v2.0
    container_name: traefik
    network_mode: host
    ports:
      - "{{lib.get_port('http')}}:80"
      - "{{lib.get_port('traefik')}}:{{lib.get_port('traefik')}}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /data/compose/traefik.yml:/traefik.yml
      - /data/compose/traefik-http.yml:/http.yml
    depends_on: 
      - "traefik-auth-cloudflare"
  jaeger:
    container_name: jaeger
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - 5778:5778
      - 16686:16686 # UI
      - 14268:14268
      - 9411:9411
    image: "jaegertracing/all-in-one:1.10"
    labels:
      - "traefik.http.routers.jaeger.rule=Host(`jaeger.infra.nickysemenza.com`)"
      - "traefik.http.services.jaeger.loadbalancer.server.port=16686"
      - "traefik.http.routers.jaeger.middlewares=cloudflare-access@file"
  whoami:
    image: emilevauge/whoami
    container_name: whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.infra.nickysemenza.com`) || HostRegexp(`{subdomain:[a-z]+}.infra.nickysemenza.com`)"
      - "traefik.http.routers.whoami.priority=30"
  digitalocean_exporter:
    image: metalmatze/digitalocean_exporter:master
    container_name: digitalocean_exporter 
    environment:
      DIGITALOCEAN_TOKEN: '{{ pillar.get('digitalocean')['apikey-ro'] }}'
    restart: always
    ports:
    - "9212:9212"
  grafana:
    container_name: grafana
    volumes:
      - /data/compose/grafana/grafana.ini:/etc/grafana/grafana.ini
    image: grafana/grafana:6.6.1
    network_mode: host
    environment:
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource,jdbranham-diagram-panel,grafana-piechart-panel,natel-discrete-panel"
      GF_SECURITY_ADMIN_PASSWORD: "{{ pillar.get('grafana')['admin-password'] }}"
      GF_DATABASE_TYPE: postgres
      GF_DATABASE_NAME: "{{ grafana_dbname }}"
      GF_DATABASE_HOST: "{{ database['address'] }}"
      GF_DATABASE_USER: "{{ database['user'] }}"
      GF_DATABASE_PASSWORD: "{{ database['password'] }}"
      GF_DATABASE_SSL_MODE: disable
      GF_SERVER_ROOT_URL: "https://grafana.infra.nickysemenza.com"
      GF_TRACING_JAEGER_ADDRESS: localhost:6831
    labels:
      - "traefik.http.routers.grafana.rule=Host(`grafana.nickysemenza.com`)"
      - "traefik.http.services.grafana.loadbalancer.server.port={{pillar.get('ports')['grafana']}}"
      - "traefik.http.routers.grafana.middlewares=cloudflare-access@file"
  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    ports:
      - "{{lib.get_port('cadvisor')}}:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
  unifi-poller:
    restart: always
    image: golift/unifi-poller:stable
    environment:
      - UP_MODE=prometheus
      - UP_UNIFI_DEFAULT_USER={{ pillar.get('unifi')['username'] }}
      - UP_UNIFI_DEFAULT_PASS={{ pillar.get('unifi')['password'] }}
      - UP_UNIFI_DEFAULT_URL=https://unifi.nickysemenza.com:8443
      - UP_UNIFI_DEFAULT_VERIFY_SSL=false
      - UP_PROMETHEUS_HTTP_LISTEN=0.0.0.0:{{lib.get_port('unifipoller')}}
      - UP_UNIFI_DEFAULT_SAVE_DPI=true
    ports:
      - "{{lib.get_port('unifipoller')}}:{{lib.get_port('unifipoller')}}"
  unifi-controller:
    image: linuxserver/unifi-controller
    container_name: unifi-controller
    environment:
      - PUID=1000
      - PGID=1000
      - MEM_LIMIT=1024M #optional
    volumes:
      - /data/compose/unifi:/config
    ports:
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 8081:8081
      - 8443:8443
      - 8843:8843
      - 8880:8880
      - 6789:6789
    restart: unless-stopped
  domain_exporter:
    ports:
      - '{{lib.get_port('domain_exporter')}}:9222'
    image: caarlos0/domain_exporter
  cloudflare-prometheus-exporter:
    ports:
      - '{{lib.get_port('cloudflare_exporter')}}:2112'
    environment:
      - APIKEY={{ pillar.get('cloudflare')['apikey'] }}
      - APIEMAIL={{ pillar.get('cloudflare')['apiemail'] }}
    image: stephanecloudflare/cloudflare-prometheus-exporter
  speedtest:
    environment:
      - MODE=standalone
    ports:
      - '{{lib.get_port('speedtest')}}:80'
    image: adolfintel/speedtest
    {# volumes: #}
      {# - /data/compose/speedtest.json:/servers.json #}
  transmission-exporter:
    image: metalmatze/transmission-exporter
    restart: always
    ports:
      - "{{lib.get_port('transmission_exporter')}}:19091"
    environment:
      TRANSMISSION_ADDR: http://{{pillar.roles['main'].tailscale_ip}}:{{lib.get_port('transmission')}}